// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "steammessages_steamlearn.steamworkssdk.proto" (syntax proto2)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SteamLearn } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_InferenceMetadata_Response } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_InferenceMetadata_Request } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_Inference_Response } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_Inference_Request } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_GetAccessTokens_Response } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_GetAccessTokens_Request } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_BatchOperation_Response } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_BatchOperation_Request } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_SnapshotProject_Response } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_SnapshotProject_Request } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_CacheData_Response } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_CacheData_Request } from "./steammessages_steamlearn.steamworkssdk";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CMsgSteamLearn_RegisterDataSource_Response } from "./steammessages_steamlearn.steamworkssdk";
import type { CMsgSteamLearn_RegisterDataSource_Request } from "./steammessages_steamlearn.steamworkssdk";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service SteamLearn
 */
export interface ISteamLearnClient {
    /**
     * @generated from protobuf rpc: RegisterDataSource(CMsgSteamLearn_RegisterDataSource_Request) returns (CMsgSteamLearn_RegisterDataSource_Response);
     */
    registerDataSource(input: CMsgSteamLearn_RegisterDataSource_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_RegisterDataSource_Request, CMsgSteamLearn_RegisterDataSource_Response>;
    /**
     * @generated from protobuf rpc: CacheData(CMsgSteamLearn_CacheData_Request) returns (CMsgSteamLearn_CacheData_Response);
     */
    cacheData(input: CMsgSteamLearn_CacheData_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_CacheData_Request, CMsgSteamLearn_CacheData_Response>;
    /**
     * @generated from protobuf rpc: SnapshotProject(CMsgSteamLearn_SnapshotProject_Request) returns (CMsgSteamLearn_SnapshotProject_Response);
     */
    snapshotProject(input: CMsgSteamLearn_SnapshotProject_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_SnapshotProject_Request, CMsgSteamLearn_SnapshotProject_Response>;
    /**
     * @generated from protobuf rpc: BatchOperation(CMsgSteamLearn_BatchOperation_Request) returns (CMsgSteamLearn_BatchOperation_Response);
     */
    batchOperation(input: CMsgSteamLearn_BatchOperation_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_BatchOperation_Request, CMsgSteamLearn_BatchOperation_Response>;
    /**
     * @generated from protobuf rpc: GetAccessTokens(CMsgSteamLearn_GetAccessTokens_Request) returns (CMsgSteamLearn_GetAccessTokens_Response);
     */
    getAccessTokens(input: CMsgSteamLearn_GetAccessTokens_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_GetAccessTokens_Request, CMsgSteamLearn_GetAccessTokens_Response>;
    /**
     * @generated from protobuf rpc: Inference(CMsgSteamLearn_Inference_Request) returns (CMsgSteamLearn_Inference_Response);
     */
    inference(input: CMsgSteamLearn_Inference_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_Inference_Request, CMsgSteamLearn_Inference_Response>;
    /**
     * @generated from protobuf rpc: InferenceMetadata(CMsgSteamLearn_InferenceMetadata_Request) returns (CMsgSteamLearn_InferenceMetadata_Response);
     */
    inferenceMetadata(input: CMsgSteamLearn_InferenceMetadata_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_InferenceMetadata_Request, CMsgSteamLearn_InferenceMetadata_Response>;
}
/**
 * @generated from protobuf service SteamLearn
 */
export class SteamLearnClient implements ISteamLearnClient, ServiceInfo {
    typeName = SteamLearn.typeName;
    methods = SteamLearn.methods;
    options = SteamLearn.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: RegisterDataSource(CMsgSteamLearn_RegisterDataSource_Request) returns (CMsgSteamLearn_RegisterDataSource_Response);
     */
    registerDataSource(input: CMsgSteamLearn_RegisterDataSource_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_RegisterDataSource_Request, CMsgSteamLearn_RegisterDataSource_Response> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CMsgSteamLearn_RegisterDataSource_Request, CMsgSteamLearn_RegisterDataSource_Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CacheData(CMsgSteamLearn_CacheData_Request) returns (CMsgSteamLearn_CacheData_Response);
     */
    cacheData(input: CMsgSteamLearn_CacheData_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_CacheData_Request, CMsgSteamLearn_CacheData_Response> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CMsgSteamLearn_CacheData_Request, CMsgSteamLearn_CacheData_Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SnapshotProject(CMsgSteamLearn_SnapshotProject_Request) returns (CMsgSteamLearn_SnapshotProject_Response);
     */
    snapshotProject(input: CMsgSteamLearn_SnapshotProject_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_SnapshotProject_Request, CMsgSteamLearn_SnapshotProject_Response> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CMsgSteamLearn_SnapshotProject_Request, CMsgSteamLearn_SnapshotProject_Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: BatchOperation(CMsgSteamLearn_BatchOperation_Request) returns (CMsgSteamLearn_BatchOperation_Response);
     */
    batchOperation(input: CMsgSteamLearn_BatchOperation_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_BatchOperation_Request, CMsgSteamLearn_BatchOperation_Response> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<CMsgSteamLearn_BatchOperation_Request, CMsgSteamLearn_BatchOperation_Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAccessTokens(CMsgSteamLearn_GetAccessTokens_Request) returns (CMsgSteamLearn_GetAccessTokens_Response);
     */
    getAccessTokens(input: CMsgSteamLearn_GetAccessTokens_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_GetAccessTokens_Request, CMsgSteamLearn_GetAccessTokens_Response> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<CMsgSteamLearn_GetAccessTokens_Request, CMsgSteamLearn_GetAccessTokens_Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Inference(CMsgSteamLearn_Inference_Request) returns (CMsgSteamLearn_Inference_Response);
     */
    inference(input: CMsgSteamLearn_Inference_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_Inference_Request, CMsgSteamLearn_Inference_Response> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<CMsgSteamLearn_Inference_Request, CMsgSteamLearn_Inference_Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: InferenceMetadata(CMsgSteamLearn_InferenceMetadata_Request) returns (CMsgSteamLearn_InferenceMetadata_Response);
     */
    inferenceMetadata(input: CMsgSteamLearn_InferenceMetadata_Request, options?: RpcOptions): UnaryCall<CMsgSteamLearn_InferenceMetadata_Request, CMsgSteamLearn_InferenceMetadata_Response> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<CMsgSteamLearn_InferenceMetadata_Request, CMsgSteamLearn_InferenceMetadata_Response>("unary", this._transport, method, opt, input);
    }
}
