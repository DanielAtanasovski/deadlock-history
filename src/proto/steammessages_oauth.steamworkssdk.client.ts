// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "steammessages_oauth.steamworkssdk.proto" (syntax proto2)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { OAuthToken } from "./steammessages_oauth.steamworkssdk";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { COAuthToken_ImplicitGrantNoPrompt_Response } from "./steammessages_oauth.steamworkssdk";
import type { COAuthToken_ImplicitGrantNoPrompt_Request } from "./steammessages_oauth.steamworkssdk";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service OAuthToken
 */
export interface IOAuthTokenClient {
    /**
     * @generated from protobuf rpc: ImplicitGrantNoPrompt(COAuthToken_ImplicitGrantNoPrompt_Request) returns (COAuthToken_ImplicitGrantNoPrompt_Response);
     */
    implicitGrantNoPrompt(input: COAuthToken_ImplicitGrantNoPrompt_Request, options?: RpcOptions): UnaryCall<COAuthToken_ImplicitGrantNoPrompt_Request, COAuthToken_ImplicitGrantNoPrompt_Response>;
}
/**
 * @generated from protobuf service OAuthToken
 */
export class OAuthTokenClient implements IOAuthTokenClient, ServiceInfo {
    typeName = OAuthToken.typeName;
    methods = OAuthToken.methods;
    options = OAuthToken.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ImplicitGrantNoPrompt(COAuthToken_ImplicitGrantNoPrompt_Request) returns (COAuthToken_ImplicitGrantNoPrompt_Response);
     */
    implicitGrantNoPrompt(input: COAuthToken_ImplicitGrantNoPrompt_Request, options?: RpcOptions): UnaryCall<COAuthToken_ImplicitGrantNoPrompt_Request, COAuthToken_ImplicitGrantNoPrompt_Response> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<COAuthToken_ImplicitGrantNoPrompt_Request, COAuthToken_ImplicitGrantNoPrompt_Response>("unary", this._transport, method, opt, input);
    }
}
